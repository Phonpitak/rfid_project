const express = require('express');
const router = express.Router();
const db = require('../config/db'); // ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Database
const moment = require('moment-timezone'); // ‚úÖ ‡πÉ‡∏ä‡πâ moment-timezone


router.post('/rfid', async (req, res) => {
    try {
        console.log("üì• Received RFID Data:", req.body); // Debug
        const { value } = req.body;
        const currentDate = moment().tz("Asia/Bangkok").format("YYYY-MM-DD");
        const currentTime = moment().tz("Asia/Bangkok").format("HH:mm:ss");
        const currentDay = moment().tz("Asia/Bangkok").locale("th").format("dddd");

        if (!value) {
            return res.status(400).json({ error: "RFID value is required" });
        }

        // ‚úÖ ‡πÉ‡∏ä‡πâ async/await ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ db.query() ‡∏ñ‡∏π‡∏Å promisify ‡πÅ‡∏•‡πâ‡∏ß
        const student = await db.query(
            "SELECT * FROM t_user WHERE rfid_id = ?",
            [value]
        );

        if (!student || student.length === 0) {
            return res.status(404).json({ error: "RFID ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö" });
        }

        const studentId = student[0].u_id;
        const studentYear = student[0].std_year;

        // ‚úÖ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
        const schedule = await db.query(
            "SELECT subject_id FROM t_subjects WHERE day_of_week = ? AND year = ?",
            [currentDay, studentYear]
        );

        if (!schedule || schedule.length === 0) {
            return res.status(400).json({ error: "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏¥‡∏ä‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡∏ô‡∏µ‡πâ" });
        }

        const subjectId = schedule[0].subject_id;

        // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
        await db.query(
            "INSERT INTO t_attendance (student_id, subject_id, attendance_date, attendance_status, scan_time) VALUES (?, ?, ?, ?, ?)",
            [studentId, subjectId, currentDate, 1, currentTime]
        );

        return res.json({ status: "success", message: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", subject_id: subjectId });
    } catch (error) {
        console.error("‚ùå Error in RFID API:", error);
        return res.status(500).json({ error: "Internal Server Error" });
    }
});


module.exports = router;


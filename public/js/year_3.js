$(document).ready(function() {
    const teacherId = sessionStorage.getItem('TeacherID');  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• TeacherID ‡∏à‡∏≤‡∏Å sessionStorage ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ teacherId ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!teacherId) {
        console.error('Teacher ID not found. Please log in again.');
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà');
        window.location.href = 'login.html'; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ TeacherID ‡πÉ‡∏´‡πâ redirect ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ login
    } else {
        fetchAttendanceData(teacherId); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô fetchAttendanceData ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    }
});

function handleAccessControl(group_id) {
    if (group_id == 9) {
        TB_Open();
    } else if (group_id == 1 || group_id == 2) {
        removeElements(['registerMenu', 'memberlist', 'addsubject', 'register_all', 'year_1', 'year_2', 'year_3', 'year_4']);
    } else if (group_id == 5) {
        removeElements(['registerMenu', 'register_all', 'memberlist', 'addsubject', 'detailMenu', 'subjectMenu', 'attendanceMenu']);
        TB_Open();
    }
}

function removeElements(ids) {
    ids.forEach(id => $(`#${id}`).remove());
}
// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å sessionStorage
const firstName = sessionStorage.getItem('Firstname');
const lastName = sessionStorage.getItem('Lastname');
if (firstName && lastName) {
    document.getElementById('profile-name').innerText = `${firstName} ${lastName}`;
} else {
    console.log('No profile data found in sessionStorage');
}
// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API
function fetchAttendanceData(teacherId) {
    $.ajax({
        url: `/attendance3?teacher_id=${teacherId}&year=3`,
        method: 'GET',
        success: function (data) {
            if (data && Object.keys(data).length > 0) {
                createTablesByDayAndSubject(data); // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
            } else {
                $('#attendance-records').html('<p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</p>');
            }
        },
        error: function (error) {
            console.error('Error fetching attendance data:', error);
            $('#attendance-records').html('<p>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>');
        }
    });
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ä‡∏≤
function createTablesByDayAndSubject(data) {
    console.log('Data received for table generation:', data); // Debug ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å API
    $('#attendance-records').empty();

    Object.keys(data).sort().forEach(dayOfWeek => {
        const dayData = data[dayOfWeek];
        const dayTitle = $('<h2>').text(`‡∏ß‡∏±‡∏ô${dayOfWeekToText(dayOfWeek)}`);
        $('#attendance-records').append(dayTitle);

        Object.keys(dayData).forEach(subjectId => {
            const subjectData = dayData[subjectId];
            const subjectTitle = $('<h3>').text(`‡∏ß‡∏¥‡∏ä‡∏≤: ${subjectData.subject_name}`);
            const table = createAttendanceTable(subjectData.students, parseInt(dayOfWeek));

            $('#attendance-records')
                .append(subjectTitle)
                .append(table);
        });
    });
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
function createAttendanceTable(students, dayOfWeek) {
    const table = $('<table>').addClass('attendance-table');
    const thead = $('<thead>');
    const dates = generateDates('2024-11-18', dayOfWeek);

    // Create header
    const headerRow = $('<tr>')
        .append($('<th>').text('‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤'))
        .append($('<th>').text('‡∏ä‡∏∑‡πà‡∏≠ - ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•'));

    dates.forEach(date => {
        headerRow.append($('<th>').text(`${date.day}/${date.month}`));
    });

    headerRow.append($('<th>').text('‡∏™‡∏£‡∏∏‡∏õ'));
    thead.append(headerRow);
    table.append(thead);

    // Create body
    const tbody = $('<tbody>');
    Object.values(students).forEach(student => {
        const row = $('<tr>');
        row.append($('<td>').text(student.student_id));
        row.append($('<td>').text(student.fullname));
    
        dates.forEach(date => {
            const attendance = student.attendance[date.fullDate]; // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ attendance ‡∏î‡πâ‡∏ß‡∏¢ fullDate
            const status = attendance ? getStatusIcon(attendance.status) : '-'; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô "-"
            row.append($('<td>').html(status)); // ‡πÉ‡∏ä‡πâ .html() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
        });
    
        const summary = `‡∏°‡∏≤: ${student.summary.present}, ‡∏™‡∏≤‡∏¢: ${student.summary.late}, ‡∏Ç‡∏≤‡∏î: ${student.summary.absent}`;
        row.append($('<td>').text(summary));
    
        tbody.append(row);
    });

    table.append(tbody);
    return table;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
function generateDates(startDate, dayOfWeek) {
    const dates = [];
    const startDateObj = new Date(startDate);

    // ‡∏ï‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô 00:00:00 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡∏î‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏à‡∏≤‡∏Å Time Zone
    startDateObj.setHours(0, 0, 0, 0);

    // ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö dayOfWeek
    while (startDateObj.getDay() !== dayOfWeek) {
        startDateObj.setDate(startDateObj.getDate() + 1);
    }

    for (let i = 0; i < 16; i++) { // 16 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
        const currentDate = new Date(startDateObj);
        currentDate.setDate(startDateObj.getDate() + i * 7); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏µ‡∏•‡∏∞ 7 ‡∏ß‡∏±‡∏ô
        dates.push({
            day: currentDate.getDate(),
            month: currentDate.getMonth() + 1,
            fullDate: currentDate.toISOString().split('T')[0]
        });
    }

    console.log('Generated dates:', dates); // Debug ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    return dates;
}


// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
function getStatusIcon(status) {
    switch (status) {
        case '1': return '‚úîÔ∏è'; // ‡∏°‡∏≤
        case '2': return 'üïí'; // ‡∏™‡∏≤‡∏¢
        case '3': return '‚ùå'; // ‡∏Ç‡∏≤‡∏î
        default: return '-';  // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
function dayOfWeekToText(dayOfWeek) {
    const days = {
        0: '‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå',
        1: '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå',
        2: '‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£',
        3: '‡∏û‡∏∏‡∏ò',
        4: '‡∏û‡∏§‡∏´‡∏±‡∏™',
        5: '‡∏®‡∏∏‡∏Å‡∏£‡πå',
        6: '‡πÄ‡∏™‡∏≤‡∏£‡πå'
    };
    return days[dayOfWeek] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
}

// ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á Sidebar toggle
$(document).ready(function() {
    let sideBar = $("aside");
    let toggle = $("#toggle");
    let logo = $("#topbar img");

    toggle.on("click", function() {
        if (sideBar.hasClass("mini")) {
            sideBar.removeClass("mini").css("width", "14rem");
            logo.show();
        } else {
            sideBar.addClass("mini").css("width", "4rem");
            logo.hide();
        }
    });

    // Active menu item
    $(".link ul li").on("click", function() {
        $(".link ul li").removeClass("active");
        $(this).addClass("active");
        const link = $(this).find("a").attr("href");
        window.location.href = link;
    });
});
function Logout() {
    sessionStorage.clear();
  }
  